/**
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ShipRequirements } from './ship-requirements';
/**
 * A mount is installed on the exterier of a ship.
 * @export
 * @interface ShipMount
 */
export interface ShipMount {
    /**
     *
     * @type {string}
     * @memberof ShipMount
     */
    'symbol': ShipMountSymbolEnum;
    /**
     *
     * @type {string}
     * @memberof ShipMount
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof ShipMount
     */
    'description'?: string;
    /**
     *
     * @type {number}
     * @memberof ShipMount
     */
    'strength'?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof ShipMount
     */
    'deposits'?: Array<ShipMountDepositsEnum>;
    /**
     *
     * @type {ShipRequirements}
     * @memberof ShipMount
     */
    'requirements': ShipRequirements;
}
export declare const ShipMountSymbolEnum: {
    readonly GasSiphonI: "MOUNT_GAS_SIPHON_I";
    readonly GasSiphonIi: "MOUNT_GAS_SIPHON_II";
    readonly GasSiphonIii: "MOUNT_GAS_SIPHON_III";
    readonly SurveyorI: "MOUNT_SURVEYOR_I";
    readonly SurveyorIi: "MOUNT_SURVEYOR_II";
    readonly SurveyorIii: "MOUNT_SURVEYOR_III";
    readonly SensorArrayI: "MOUNT_SENSOR_ARRAY_I";
    readonly SensorArrayIi: "MOUNT_SENSOR_ARRAY_II";
    readonly SensorArrayIii: "MOUNT_SENSOR_ARRAY_III";
    readonly MiningLaserI: "MOUNT_MINING_LASER_I";
    readonly MiningLaserIi: "MOUNT_MINING_LASER_II";
    readonly MiningLaserIii: "MOUNT_MINING_LASER_III";
    readonly LaserCannonI: "MOUNT_LASER_CANNON_I";
    readonly MissileLauncherI: "MOUNT_MISSILE_LAUNCHER_I";
    readonly TurretI: "MOUNT_TURRET_I";
};
export declare type ShipMountSymbolEnum = typeof ShipMountSymbolEnum[keyof typeof ShipMountSymbolEnum];
export declare const ShipMountDepositsEnum: {
    readonly QuartzSand: "QUARTZ_SAND";
    readonly SiliconCrystals: "SILICON_CRYSTALS";
    readonly PreciousStones: "PRECIOUS_STONES";
    readonly IceWater: "ICE_WATER";
    readonly AmmoniaIce: "AMMONIA_ICE";
    readonly IronOre: "IRON_ORE";
    readonly CopperOre: "COPPER_ORE";
    readonly SilverOre: "SILVER_ORE";
    readonly AluminumOre: "ALUMINUM_ORE";
    readonly GoldOre: "GOLD_ORE";
    readonly PlatinumOre: "PLATINUM_ORE";
    readonly Diamonds: "DIAMONDS";
    readonly UraniteOre: "URANITE_ORE";
    readonly MeritiumOre: "MERITIUM_ORE";
};
export declare type ShipMountDepositsEnum = typeof ShipMountDepositsEnum[keyof typeof ShipMountDepositsEnum];
//# sourceMappingURL=ship-mount.d.ts.map