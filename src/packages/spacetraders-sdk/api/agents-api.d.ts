/**
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { GetMyAgent200Response } from '../models';
/**
 * AgentsApi - axios parameter creator
 * @export
 */
export declare const AgentsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Fetch your agent\'s details.
     * @summary My Agent Details
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMyAgent: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AgentsApi - functional programming interface
 * @export
 */
export declare const AgentsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Fetch your agent\'s details.
     * @summary My Agent Details
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMyAgent(options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<GetMyAgent200Response>>;
};
/**
 * AgentsApi - factory interface
 * @export
 */
export declare const AgentsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Fetch your agent\'s details.
     * @summary My Agent Details
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMyAgent(options?: any): AxiosPromise<GetMyAgent200Response>;
};
/**
 * AgentsApi - object-oriented interface
 * @export
 * @class AgentsApi
 * @extends {BaseAPI}
 */
export declare class AgentsApi extends BaseAPI {
    /**
     * Fetch your agent\'s details.
     * @summary My Agent Details
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentsApi
     */
    getMyAgent(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetMyAgent200Response, any>>;
}
//# sourceMappingURL=agents-api.d.ts.map